

/// Initialize the minigame system
void initialize_minigames();

/// Create a new minigame session
/// \return minigame session entity
entity start_minigame(entity player, string minigame );

/// Join an existing minigame session
/// \return minigame session entity
entity join_minigame(entity player, string game_id );

/// Invite a player to join in a minigame
/// \return Error string
string invite_minigame(entity inviter, entity player);

// Part minigame session
void part_minigame(entity player);

// Ends a minigame session
void end_minigame(entity minigame_session);

// Ends all minigame sessions
void end_minigames();

// Spawn a networked board piece entity
// TODO rework parameters once used
void minigame_spawn_board_piece(entity minigame_session, string name, vector pos);

// Only sends entities to players who joined the minigame
// Use on customizeentityforclient for gameplay entities
float minigame_CheckSend();

/// For minigame sessions: chain of players
.entity minigame_players;
/// For players: Minigame being played
.entity active_minigame;


entity minigame_sessions;

#include "minigames.qh"
